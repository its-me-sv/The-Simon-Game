{"version":3,"sources":["redux/board/board.types.js","utils/randomRange.js","redux/board/board.data.js","utils/playSound.js","redux/board/board.reducer.js","redux/rootReducer.js","redux/store.js","utils/sleep.js","utils/colorMap.js","components/menu/menu.component.jsx","redux/board/board.actions.js","components/board/board.component.jsx","containers/app/app.container.jsx","index.js"],"names":["boardTypes","SET_POWER","SET_START","SET_STRICT","SET_STEPS","SET_CHILDREN","USER_MOVE","SET_SHOULD_RUN","randomRange","minVal","maxVal","Math","floor","random","cn","className","playSound","pos","audio","document","getElementById","currentTime","volume","play","INITIAL_STATE","power","start","strict","steps","children","userMoves","shouldRun","boardReducer","state","action","type","payload","nextPlace","umCpy","join","slice","length","nextPlace1","rootReducer","combineReducers","board","middlewares","thunkMiddleware","store","createStore","applyMiddleware","sleep","ms","Promise","resolve","setTimeout","colorMap","connect","dispatch","togglePower","toggleStart","toggleStrict","updateSteps","setChildren","newArr","userMove","val","setShouldRun","runBehind","a","index","childrenCpy","noc","newChild","finalChildren","i","push","onClick","App","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eac996e5.chunk.js","sourcesContent":["const boardTypes = {\r\n    SET_POWER: \"SET_POWER\",\r\n    SET_START: \"SET_START\",\r\n    SET_STRICT: \"SET_STRICT\",\r\n    SET_STEPS: \"SET_STEPS\",\r\n    SET_CHILDREN: \"SET_CHILDREN\",\r\n    USER_MOVE: \"USER_MOVE\",\r\n    SET_SHOULD_RUN: \"SET_SHOULD_RUN\"\r\n};\r\n\r\nexport default boardTypes;","const randomRange = (minVal = 0, maxVal = 3) => {\r\n    return Math.floor(Math.random() * (maxVal - minVal + 1) + minVal);\r\n};\r\n\r\nexport default randomRange;","const cn = [\r\n    <div className=\"child-box green\" key=\"0\"></div>,\r\n    <div className=\"child-box red\" key=\"1\"></div>,\r\n    <div className=\"child-box yellow\" key=\"2\"></div>,\r\n    <div className=\"child-box blue\" key=\"3\"></div>\r\n];\r\n\r\nexport default cn;","const playSound = pos => {\r\n    let audio = document.getElementById(pos);\r\n    audio.currentTime = 0;\r\n    audio.volume = 1;\r\n    audio.play();\r\n};\r\n\r\nexport default playSound;","import boardTypes from \"./board.types\";\r\n\r\n// Utility Functions\r\nimport randomRange from \"../../utils/randomRange\";\r\nimport cn  from \"./board.data\";\r\nimport playSound from \"../../utils/playSound\";\r\n\r\n// Initial State\r\nconst INITIAL_STATE = {\r\n    power: false,\r\n    start: false,\r\n    strict: false,\r\n    steps: [0],\r\n    children: [...cn],\r\n    userMoves: [],\r\n    shouldRun: false\r\n};\r\n\r\nconst boardReducer = (state = INITIAL_STATE, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case boardTypes.SET_POWER: \r\n            return {\r\n                ...state,\r\n                power: !state.power,\r\n                steps: [0],\r\n                children: [...cn],\r\n                userMoves: []\r\n            };\r\n        case boardTypes.SET_START:\r\n            return {\r\n                ...state,\r\n                start: !state.start,\r\n                steps: [0],\r\n                children: [...cn]\r\n            };\r\n        case boardTypes.SET_STRICT:\r\n            return {\r\n                ...state,\r\n                strict: !state.strict\r\n            };\r\n        case boardTypes.SET_STEPS: {\r\n            const nextPlace = randomRange();\r\n            return {\r\n                ...state,\r\n                steps: [...state.steps, nextPlace]\r\n            };\r\n        }\r\n        case boardTypes.SET_CHILDREN:\r\n            return {\r\n                ...state,\r\n                children: [...payload]\r\n            };\r\n        case boardTypes.USER_MOVE: {\r\n            let umCpy = [...state.userMoves, payload];\r\n            if (umCpy.join(\"\") === state.steps.slice(0, umCpy.length).join(\"\")) {\r\n                if (umCpy.length === state.steps.length) {\r\n                    const nextPlace1 = randomRange();\r\n                    return {\r\n                        ...state,\r\n                        steps: [...state.steps, nextPlace1],\r\n                        start: !state.start,\r\n                        shouldRun: true,\r\n                        userMoves: []\r\n                    };\r\n                }\r\n                return {\r\n                    ...state,\r\n                    userMoves: [...umCpy]\r\n                };\r\n            }\r\n            playSound(\"4\");\r\n            if (state.strict === true)\r\n                return {\r\n                    ...state,\r\n                    start: false,\r\n                    userMoves: [],\r\n                    steps: [0],\r\n                    shouldRun: true\r\n                };\r\n            return {\r\n                ...state,\r\n                start: false,\r\n                userMoves: [],\r\n                shouldRun: true\r\n            };\r\n        }\r\n        case boardTypes.SET_SHOULD_RUN:\r\n            return {\r\n                ...state,\r\n                shouldRun: payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardReducer;","import { combineReducers } from \"redux\";\r\n\r\n// Reducers\r\nimport boardReducer from \"./board/board.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    board: boardReducer\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\n\r\n// Middlewares\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\n// Root Reducer\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\")\r\n    middlewares.push(logger);\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport default sleep;","const colorMap = {\r\n    0: \"green\",\r\n    1: \"red\",\r\n    2: \"yellow\",\r\n    3: \"blue\"\r\n};\r\n\r\nexport default colorMap;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport \"./menu.styles.css\";\r\n\r\n// Actions\r\nimport {\r\n    togglePower,\r\n    toggleStart,\r\n    toggleStrict,\r\n    updateSteps,\r\n    setChildren,\r\n    userMove,\r\n    setShouldRun\r\n} from \"../../redux/board/board.actions\";\r\n\r\n// Utility Functions\r\nimport sleep from \"../../utils/sleep\";\r\nimport colorMap from \"../../utils/colorMap\";\r\nimport cn from \"../../redux/board/board.data\";\r\nimport playSound from \"../../utils/playSound\";\r\n\r\nconst Menu = ({\r\n    power, \r\n    start, \r\n    strict, \r\n    steps, \r\n    togglePower, \r\n    toggleStart, \r\n    toggleStrict, \r\n    updateSteps,\r\n    setChildren,\r\n    children,\r\n    userMove,\r\n    shouldRun,\r\n    setShouldRun\r\n}) => {\r\n    const runBehind = async () => {\r\n        let newChild;\r\n        let childrenCpy;\r\n        await sleep(1000);\r\n        for (let index of steps) {\r\n            childrenCpy = [...cn];\r\n            let noc = `child-box ${colorMap[index]} ${colorMap[index]}-active`;\r\n            newChild = <div className={noc} key={`${index}`}></div>\r\n            childrenCpy[index] = newChild;\r\n            setChildren(childrenCpy);\r\n            playSound(`${index}`);\r\n            await sleep(1000);\r\n        }\r\n        let finalChildren = [];\r\n        for (let i = 0; i < 4; i += 1) {\r\n            finalChildren.push(\r\n                <div\r\n                    className={`child-box ${colorMap[i]}`}\r\n                    onClick={\r\n                        () => {\r\n                            playSound(`${i}`);\r\n                            userMove(i);\r\n                        }\r\n                    }\r\n                    key={i}\r\n                ></div>\r\n            );\r\n        }\r\n        setChildren([...finalChildren]);\r\n    };\r\n\r\n    if (shouldRun === true) {\r\n        runBehind();\r\n        setShouldRun(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"center-box\">\r\n            <span className=\"title\">Simon</span>\r\n            <div className=\"disp-btns\">\r\n                <button className={`count ${power ? \"\" : \"disabled\"}`}>\r\n                    {steps.length > 0 && power ? steps.length : \"--\"}\r\n                </button>\r\n                <button \r\n                    className={`start ${power ? \"\" : \"disabled\"}`}\r\n                    onClick={\r\n                        () => {\r\n                            if (!power) return;\r\n                            toggleStart();\r\n                            runBehind();\r\n                        }\r\n                    }\r\n                >Start</button>\r\n                <button \r\n                    className={`strict ${power && strict ? \"\" : \"disabled\"}`}\r\n                    onClick={() => power && toggleStrict()}\r\n                >Strict</button>\r\n            </div>\r\n            <button \r\n                className={`switch ${power ? \"\" : \"disabled\"}`}\r\n                onClick={togglePower}\r\n            >\r\n                On/Off\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({board}) => ({\r\n    ...board\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    togglePower: () => dispatch(togglePower()),\r\n    toggleStart: () => dispatch(toggleStart()),\r\n    toggleStrict: () => dispatch(toggleStrict()),\r\n    updateSteps: () => dispatch(updateSteps()),\r\n    setChildren: newArr => dispatch(setChildren(newArr)),\r\n    userMove: val => dispatch(userMove(val)),\r\n    setShouldRun: val => dispatch(setShouldRun(val))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Menu);","import boardTypes from \"./board.types\";\r\n\r\nexport const togglePower = () => ({\r\n    type: boardTypes.SET_POWER\r\n});\r\n\r\nexport const toggleStart = () => ({\r\n    type: boardTypes.SET_START\r\n});\r\n\r\nexport const toggleStrict = () => ({\r\n    type: boardTypes.SET_STRICT\r\n});\r\n\r\nexport const updateSteps = () => ({\r\n    type: boardTypes.SET_STEPS\r\n});\r\n\r\nexport const setChildren = newArr => ({\r\n    type: boardTypes.SET_CHILDREN,\r\n    payload: [...newArr]\r\n});\r\n\r\nexport const userMove = move => ({\r\n    type: boardTypes.USER_MOVE,\r\n    payload: move\r\n});\r\n\r\nexport const setShouldRun = val => ({\r\n    type: boardTypes.SET_SHOULD_RUN,\r\n    payload: val\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// Styles\r\nimport \"./board.styles.css\";\r\n\r\n\r\n// Components\r\nimport Menu from \"../menu/menu.component\";\r\nimport cn from \"../../redux/board/board.data\";\r\n\r\nconst Board = ({children, power}) => {\r\n    return (\r\n        <div className=\"parent-box\">\r\n            <Menu />\r\n            {power ? children : cn}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({board}) => ({\r\n    ...board\r\n});\r\n\r\nexport default connect(mapStateToProps)(Board);","import React from \"react\";\r\n\r\n// Styles\r\nimport \"./app.styles.css\";\r\n\r\n// Components\r\nimport Board from \"../../components/board/board.component\";\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-container\">\r\n                <Board />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Styles\nimport './index.css';\n\n// Redux store\nimport store from \"./redux/store\";\n\n// Components\nimport App from \"./containers/app/app.container\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}